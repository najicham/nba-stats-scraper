#!/bin/bash
# FILE: backfill_jobs/reference/gamebook_registry/deploy.sh

# Deploy NBA Gamebook Registry Processor Backfill Job

set -e

echo "Deploying NBA Gamebook Registry Processor Backfill Job..."

# Use standardized reference processors backfill deployment script
./bin/reference/deploy/deploy_reference_processor_backfill.sh gamebook_registry

echo "Deployment complete!"
echo ""
echo "Test Commands (Gamebook Registry Building):"
echo "  # Safe first test (summary only):"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--summary-only --region=us-west2"
echo ""
echo "  # Single season test (MERGE strategy - safe):"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--season=2024-25,--strategy=merge --region=us-west2"
echo ""
echo "  # Full historical backfill (REPLACE strategy - requires confirmation):"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--all-seasons,--strategy=replace,--confirm-full-delete --region=us-west2"
echo ""
echo "  # Date range processing (incremental updates):"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--start-date=2024-01-01,--end-date=2024-01-31,--strategy=merge --region=us-west2"
echo ""
echo "  # Test mode with enhanced name change detection:"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--season=2023-24,--test-mode,--strategy=merge,--enable-name-change-detection --region=us-west2"
echo ""
echo "  # Production daily update (MERGE strategy - no confirmation needed):"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--season=2024-25,--strategy=merge,--enable-name-change-detection --region=us-west2"
echo ""
echo "Monitor logs:"
echo "  gcloud beta run jobs executions logs read [execution-id] --region=us-west2 --follow"
echo ""
echo "Strategy Options:"
echo "  • --strategy=merge:   Atomic MERGE operations (safe for daily operations, no confirmation needed)"
echo "  • --strategy=replace: DELETE entire tables + INSERT (requires --confirm-full-delete flag for safety)"
echo ""
echo "Usage Scenarios:"
echo "  • Summary Only: Check current gamebook registry status without processing"
echo "  • Single Season: Build/update registry for specific season from gamebook data"
echo "  • Historical Backfill: Process all available NBA.com gamebook data (recommended first run)"
echo "  • Date Range: Incremental updates for specific dates"
echo "  • Daily Updates: Nightly processing with name change detection enabled"
echo ""
echo "Name Change Detection:"
echo "  • --enable-name-change-detection: Enable enhanced investigation reporting"
echo "  • Default: Disabled for backfill performance, enable for daily production runs"
echo "  • Generates investigation reports for potential player name changes"
echo ""
echo "Notes:"
echo "  • Processes NBA.com gamebook data specifically (player game participation)"
echo "  • Integrates with Universal Player ID system for consistent player identification"
echo "  • Registry supports downstream analytics and prop betting analysis"
echo "  • Job has 2-hour timeout and 8GB memory for large dataset processing"
echo "  • Args use equals syntax (--param=value) with no spaces or quotes"
echo "  • REPLACE strategy requires --confirm-full-delete flag to prevent accidental data loss"
echo ""
echo "Validate results:"
echo "  # Check gamebook registry summary"
echo "  gcloud run jobs execute gamebook-registry-processor-backfill --args=--summary-only --region=us-west2"
echo ""
echo "  # Query registry directly"
echo "  bq query --use_legacy_sql=false \"SELECT COUNT(*) as total_records, COUNT(DISTINCT player_lookup) as unique_players, COUNT(DISTINCT universal_player_id) as unique_universal_ids, COUNT(DISTINCT season) as seasons FROM \\\`nba-props-platform.nba_reference.nba_players_registry\\\`\""
echo ""
echo "  # Check universal ID distribution"
echo "  bq query --use_legacy_sql=false \"SELECT universal_player_id, COUNT(*) as records FROM \\\`nba-props-platform.nba_reference.nba_players_registry\\\` GROUP BY universal_player_id ORDER BY records DESC LIMIT 10\\\`\""
