#!/bin/bash
# FILE: backfill_jobs/analytics/player_game_summary/deploy.sh

# Deploy Player Game Summary Analytics Processor Backfill Job

set -e

# Get to project root and source shared wrapper functions
cd "$(dirname "$0")/../../.."
source "./bin/shared/deploy_wrapper_common.sh"

# Start deployment timing
start_deployment_timer

echo "Deploying Player Game Summary Analytics Processor Backfill Job..."

# Use standardized analytics processors backfill deployment script
./bin/analytics/deploy/deploy_analytics_processor_backfill.sh player_game_summary

echo "Deployment complete!"
echo ""

print_section_header "Test Commands (Day-by-Day Processing)"
echo "  # Dry run (check data availability):"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--dry-run,--start-date=2024-01-01,--end-date=2024-01-07 --region=us-west2"
echo ""
echo "  # Small test (3 days):"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--start-date=2024-01-01,--end-date=2024-01-03 --region=us-west2"
echo ""
echo "  # Weekly processing:"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--start-date=2024-01-01,--end-date=2024-01-07 --region=us-west2"
echo ""
echo "  # Monthly processing (January 2024):"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--start-date=2024-01-01,--end-date=2024-01-31 --region=us-west2"
echo ""
echo "  # Quarterly processing (Q1 2024):"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--start-date=2024-01-01,--end-date=2024-03-31 --region=us-west2"
echo ""
echo "  # Retry specific failed dates:"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=\"^|^--dates=2024-01-05,2024-01-12,2024-01-18\" --region=us-west2"
echo ""
echo "  # Full season backfill (2024-25 season):"
echo "  gcloud run jobs execute player-game-summary-analytics-backfill --args=--start-date=2024-10-22,--end-date=2025-04-13 --region=us-west2"
echo ""

print_section_header "Monitor & Debug"
echo "  # View recent executions:"
echo "  gcloud run jobs executions list --job=player-game-summary-analytics-backfill --region=us-west2 --limit=5"
echo ""
echo "  # View logs (replace EXECUTION_ID):"
echo "  gcloud beta run jobs executions logs read EXECUTION_ID --region=us-west2"
echo ""
echo "  # Check execution status:"
echo "  gcloud run jobs executions describe EXECUTION_ID --region=us-west2"
echo ""

print_section_header "Validate Results"
echo "  # Check for duplicates (should return 0 rows):"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT player_lookup, game_id, COUNT(*) as cnt \\"
echo "    FROM \\\`nba-props-platform.nba_analytics.player_game_summary\\\` \\"
echo "    WHERE game_date BETWEEN '2024-01-01' AND '2024-01-31' \\"
echo "    GROUP BY player_lookup, game_id \\"
echo "    HAVING cnt > 1\""
echo ""
echo "  # Check record counts by date:"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT game_date, COUNT(*) as records, \\"
echo "    COUNT(DISTINCT game_id) as games, \\"
echo "    COUNT(DISTINCT player_lookup) as players \\"
echo "    FROM \\\`nba-props-platform.nba_analytics.player_game_summary\\\` \\"
echo "    WHERE game_date BETWEEN '2024-01-01' AND '2024-01-31' \\"
echo "    GROUP BY game_date \\"
echo "    ORDER BY game_date DESC\""
echo ""
echo "  # Check universal_player_id coverage:"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT \\"
echo "    COUNT(*) as total_records, \\"
echo "    COUNT(universal_player_id) as with_uid, \\"
echo "    COUNT(universal_player_id)*100.0/COUNT(*) as coverage_pct \\"
echo "    FROM \\\`nba-props-platform.nba_analytics.player_game_summary\\\` \\"
echo "    WHERE game_date BETWEEN '2024-01-01' AND '2024-01-31'\""
echo ""
echo "  # Check bookmaker distribution:"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT points_line_source, COUNT(*) as count \\"
echo "    FROM \\\`nba-props-platform.nba_analytics.player_game_summary\\\` \\"
echo "    WHERE game_date BETWEEN '2024-01-01' AND '2024-01-31' \\"
echo "    AND points_line_source IS NOT NULL \\"
echo "    GROUP BY points_line_source \\"
echo "    ORDER BY count DESC\""
echo ""
echo "  # Check for unresolved players:"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT raw_name, first_seen, last_seen, attempt_count \\"
echo "    FROM \\\`nba-props-platform.nba_reference.unresolved_player_names\\\` \\"
echo "    WHERE source_name = 'player_game_summary' \\"
echo "    ORDER BY last_seen DESC \\"
echo "    LIMIT 20\""
echo ""
echo "  # Check data quality metrics:"
echo "  bq query --use_legacy_sql=false \\"
echo "    \"SELECT \\"
echo "    AVG(points) as avg_points, \\"
echo "    AVG(minutes_decimal) as avg_minutes, \\"
echo "    COUNT(CASE WHEN points_line IS NOT NULL THEN 1 END) as with_prop_line, \\"
echo "    COUNT(CASE WHEN points > points_line THEN 1 END) as prop_overs, \\"
echo "    COUNT(CASE WHEN points < points_line THEN 1 END) as prop_unders \\"
echo "    FROM \\\`nba-props-platform.nba_analytics.player_game_summary\\\` \\"
echo "    WHERE game_date BETWEEN '2024-01-01' AND '2024-01-31'\""
echo ""

print_section_header "Notes"
echo "  ✓ This processor uses day-by-day processing to avoid BigQuery size limits"
echo "  ✓ Large date ranges are automatically processed one day at a time"
echo "  ✓ Each day gets its own registry flush for tracking unresolved players"
echo "  ✓ Bookmakers are deduplicated with priority: DraftKings → FanDuel → Others"
echo "  ✓ Uses batch insert (no streaming buffer) for immediate reprocessing"
echo ""
echo "  Args format: --args=--param1=value1,--param2=value2 (no spaces or quotes)"
echo "  For comma-separated values: --args=\"^|^--dates=val1,val2|--other=val\""
echo ""
echo "  Processing time estimates:"
echo "    • Single day: ~15-20 seconds"
echo "    • Week (7 days): ~2-3 minutes"
echo "    • Month (30 days): ~8-10 minutes"
echo "    • Season (180 days): ~45-60 minutes"
echo ""

# Print final timing summary
print_deployment_summary
