-- ============================================================================
-- File: validation/queries/raw/nbac_injury_report/status_change_detection.sql
-- Purpose: Track player status changes within a day (business intelligence)
-- Usage: Run to identify late injury status changes affecting props
-- ============================================================================
-- Expected Results:
--   - Find players whose status changed from morning to evening
--   - "out" â†’ "questionable" or "questionable" â†’ "out" are high-impact
--   - Useful for risk management and prop adjustments
-- ============================================================================

WITH 
-- Get all status reports for players on a given date
player_daily_statuses AS (
  SELECT 
    report_date,
    player_lookup,
    player_full_name,
    team,
    game_id,
    game_date,
    report_hour,
    injury_status,
    reason,
    reason_category,
    confidence_score
  FROM `nba-props-platform.nba_raw.nbac_injury_report`
  WHERE report_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)  -- Last 7 days
),

-- Find status changes within same day
status_changes AS (
  SELECT 
    report_date,
    player_lookup,
    player_full_name,
    team,
    game_id,
    game_date,
    MIN(report_hour) as earliest_hour,
    MAX(report_hour) as latest_hour,
    -- Get first and last status
    ARRAY_AGG(injury_status ORDER BY report_hour LIMIT 1)[OFFSET(0)] as first_status,
    ARRAY_AGG(injury_status ORDER BY report_hour DESC LIMIT 1)[OFFSET(0)] as last_status,
    -- Count unique statuses
    COUNT(DISTINCT injury_status) as status_changes_count,
    STRING_AGG(DISTINCT injury_status ORDER BY injury_status) as all_statuses,
    -- FIXED: Removed DISTINCT to allow ORDER BY on different column
    STRING_AGG(reason ORDER BY report_hour) as reasons
  FROM player_daily_statuses
  GROUP BY report_date, player_lookup, player_full_name, team, game_id, game_date
  HAVING COUNT(DISTINCT injury_status) > 1  -- Only players with status changes
),

-- Categorize by impact
with_impact AS (
  SELECT 
    *,
    CASE
      -- High impact: Availability changed
      WHEN first_status = 'out' AND last_status IN ('questionable', 'probable', 'available') 
        THEN 'ðŸ”´ HIGH: Out â†’ Available (late game-time decision)'
      WHEN first_status IN ('questionable', 'probable') AND last_status = 'out' 
        THEN 'ðŸ”´ HIGH: Available â†’ Out (late scratch)'
      
      -- Medium impact: Uncertainty changed
      WHEN first_status = 'questionable' AND last_status = 'probable' 
        THEN 'ðŸŸ¡ MEDIUM: Questionable â†’ Probable'
      WHEN first_status = 'probable' AND last_status = 'questionable' 
        THEN 'ðŸŸ¡ MEDIUM: Probable â†’ Questionable'
      
      -- Low impact: Status refinement
      WHEN first_status = 'doubtful' AND last_status = 'out' 
        THEN 'âšª LOW: Doubtful â†’ Out (expected)'
      
      ELSE 'ðŸ“Š OTHER: Status changed'
    END as impact_level
  FROM status_changes
)

SELECT 
  report_date,
  player_full_name,
  team,
  game_date,
  FORMAT('%02d:00', earliest_hour) as first_report_time,
  FORMAT('%02d:00', latest_hour) as last_report_time,
  first_status,
  last_status,
  status_changes_count - 1 as times_changed,
  impact_level,
  reasons
FROM with_impact
ORDER BY 
  report_date DESC,
  CASE 
    WHEN impact_level LIKE '%HIGH%' THEN 1
    WHEN impact_level LIKE '%MEDIUM%' THEN 2
    ELSE 3
  END,
  player_full_name;