#!/usr/bin/env bash
# File: scripts/validate-player-movement
# Purpose: CLI tool for NBA.com Player Movement validation queries
# Usage: validate-player-movement [command] [options]

set -e

# Configuration
QUERIES_DIR="validation/queries/raw/nbac_player_movement"
PROJECT_ID="nba-props-platform"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper functions
print_header() {
    echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

print_info() {
    echo -e "${BLUE}ℹ${NC} $1"
}

run_query() {
    local query_file=$1
    local output_format=$2
    local output_dest=$3
    
    if [ ! -f "$QUERIES_DIR/$query_file" ]; then
        print_error "Query file not found: $query_file"
        return 1
    fi
    
    print_info "Running query: $query_file"
    
    if [ "$output_format" = "csv" ]; then
        bq query --use_legacy_sql=false --format=csv < "$QUERIES_DIR/$query_file"
    elif [ "$output_format" = "table" ] && [ -n "$output_dest" ]; then
        print_info "Saving results to: $output_dest"
        bq query --use_legacy_sql=false \
            --destination_table="$output_dest" \
            --replace \
            < "$QUERIES_DIR/$query_file"
        print_success "Results saved to BigQuery table: $output_dest"
    else
        bq query --use_legacy_sql=false < "$QUERIES_DIR/$query_file"
    fi
}

# Command functions
cmd_completeness() {
    print_header "Player Movement - Season Completeness Check"
    run_query "season_completeness_check.sql" "$1" "$2"
}

cmd_trades() {
    print_header "Player Movement - Trade Validation"
    run_query "trade_validation.sql" "$1" "$2"
}

cmd_teams() {
    print_header "Player Movement - Team Activity Check"
    run_query "team_activity_check.sql" "$1" "$2"
}

cmd_quality() {
    print_header "Player Movement - Data Quality Checks"
    run_query "data_quality_checks.sql" "$1" "$2"
}

cmd_recent() {
    print_header "Player Movement - Recent Activity (Last 30 Days)"
    run_query "recent_activity_check.sql" "$1" "$2"
}

cmd_freshness() {
    print_header "Player Movement - Scraper Freshness Check"
    run_query "scraper_freshness_check.sql" "$1" "$2"
}

cmd_distribution() {
    print_header "Player Movement - Transaction Type Distribution"
    run_query "transaction_type_distribution.sql" "$1" "$2"
}

cmd_all() {
    print_header "Player Movement - Running All Validation Checks"
    echo ""
    
    print_info "1/7 - Season Completeness"
    cmd_completeness "$1" "$2"
    echo ""
    
    print_info "2/7 - Trade Validation"
    cmd_trades "$1" "$2"
    echo ""
    
    print_info "3/7 - Team Activity"
    cmd_teams "$1" "$2"
    echo ""
    
    print_info "4/7 - Data Quality"
    cmd_quality "$1" "$2"
    echo ""
    
    print_info "5/7 - Recent Activity"
    cmd_recent "$1" "$2"
    echo ""
    
    print_info "6/7 - Scraper Freshness"
    cmd_freshness "$1" "$2"
    echo ""
    
    print_info "7/7 - Transaction Distribution"
    cmd_distribution "$1" "$2"
    echo ""
    
    print_success "All validation checks complete!"
}

show_help() {
    cat << EOF
${BLUE}NBA.com Player Movement - Validation Tool${NC}

${GREEN}USAGE:${NC}
    validate-player-movement [COMMAND] [OPTIONS]

${GREEN}COMMANDS:${NC}
    ${YELLOW}completeness${NC}    Season-by-season completeness (teams, volumes)
    ${YELLOW}trades${NC}          Multi-part trade validation (orphaned parts)
    ${YELLOW}teams${NC}           Team activity check (all 30 teams)
    ${YELLOW}quality${NC}         Data quality checks (NULLs, duplicates)
    ${YELLOW}recent${NC}          Recent activity (last 30 days)
    ${YELLOW}freshness${NC}       Scraper freshness (seasonal context)
    ${YELLOW}distribution${NC}    Transaction type distribution
    ${YELLOW}all${NC}             Run all validation checks
    ${YELLOW}help${NC}            Show this help message

${GREEN}OPTIONS:${NC}
    ${YELLOW}--csv${NC}           Output results as CSV
    ${YELLOW}--table${NC} <dest>  Save results to BigQuery table

${GREEN}EXAMPLES:${NC}
    # Run season completeness check
    validate-player-movement completeness

    # Export recent activity to CSV
    validate-player-movement recent --csv

    # Save quality checks to BigQuery
    validate-player-movement quality --table nba_validation.player_movement_quality

    # Run all checks
    validate-player-movement all

${GREEN}COMMON WORKFLOWS:${NC}
    ${BLUE}Daily Morning Check:${NC}
        validate-player-movement freshness
        validate-player-movement recent

    ${BLUE}After Backfill:${NC}
        validate-player-movement completeness
        validate-player-movement trades
        validate-player-movement quality

    ${BLUE}Monthly Health Check:${NC}
        validate-player-movement all

${GREEN}QUERY FILES:${NC}
    Location: ${QUERIES_DIR}/
    
    - season_completeness_check.sql
    - trade_validation.sql
    - team_activity_check.sql
    - data_quality_checks.sql
    - recent_activity_check.sql
    - scraper_freshness_check.sql
    - transaction_type_distribution.sql

${GREEN}DATA CHARACTERISTICS:${NC}
    Table: nba_raw.nbac_player_movement
    Coverage: 2021-01-04 to present (4,457+ transactions)
    Types: Signing (47%), Waive (31%), Trade (20%), Other (2%)
    Pattern: Pattern 3 (Single Event) with trade grouping

${GREEN}SEASONAL CONTEXT:${NC}
    ${YELLOW}Free Agency (Jul-Aug):${NC}    Expect daily activity, many signings
    ${YELLOW}Trade Deadline (Feb):${NC}     Expect frequent updates, many trades
    ${YELLOW}Playoffs (May-Jun):${NC}       Minimal activity is NORMAL
    ${YELLOW}Regular Season:${NC}           Low activity is NORMAL

For more information, see: validation/queries/raw/nbac_player_movement/README.md

EOF
}

# Parse arguments
COMMAND=${1:-help}
OUTPUT_FORMAT=""
OUTPUT_DEST=""

shift || true

while [[ $# -gt 0 ]]; do
    case $1 in
        --csv)
            OUTPUT_FORMAT="csv"
            shift
            ;;
        --table)
            OUTPUT_FORMAT="table"
            OUTPUT_DEST="$2"
            shift 2
            ;;
        *)
            print_error "Unknown option: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
done

# Execute command
case $COMMAND in
    completeness)
        cmd_completeness "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    trades)
        cmd_trades "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    teams)
        cmd_teams "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    quality)
        cmd_quality "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    recent)
        cmd_recent "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    freshness)
        cmd_freshness "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    distribution)
        cmd_distribution "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    all)
        cmd_all "$OUTPUT_FORMAT" "$OUTPUT_DEST"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        print_error "Unknown command: $COMMAND"
        echo ""
        show_help
        exit 1
        ;;
esac
